import argparse
import yaml
import numpy as np
import matplotlib
matplotlib.use("Agg")
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from os.path import join, isfile
from matplotlib.font_manager import FontProperties
import sys, os
script_dir = os.path.dirname(os.path.realpath(__file__))
sys.path.insert(0, os.path.join(script_dir, "../../"))
sys.path.insert(0, os.path.join(script_dir, "../"))
import plot_cross_validation_results as plot_cv
import object_based_metrics_calc

def main(frame_utils, outdir, composite_or, training_confs):
    fontsize = 20
    df = pd.read_csv(frame_utils)

    plot_cv.plot_utils(df, outdir, fontsize, label_col="composite_label", utility_col="composite_utility", vid_name_col="vid_name_x")
    if not composite_or:
        print ("Object based metrics only possible with composite_or so far")
        return

    vids = df["vid_name_x"].unique()
    obj_files = {}
    color = 0
    for training_conf_dir in training_confs:
        with open(join(training_conf_dir, "conf.yaml")) as fi:
            conf = yaml.safe_load(fi)
        training_dir = conf["training_dir"]
        for vid in vids:
            if vid not in obj_files:
                obj_files[vid] = {}
            obj_file = join(join(training_dir, vid), "unique_objs_per_frame.txt")
            vid_objs = object_based_metrics_calc.get_obj_frames(obj_file)
            for obj in vid_objs:
                vid_obj_id = str(color)+"_"+str(obj)
                obj_files[vid][vid_obj_id] = vid_objs[obj]
        color+=1

    plot_cv.plot_rates(df, outdir, fontsize, obj_files, label_col="composite_label", utility_col="composite_utility", vid_name_col="vid_name_x")


if __name__=="__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-U", dest="frame_utils", help="Path to frame_utils.csv generated by cross_validation")
    parser.add_argument("-O", dest="outdir", help="Output directory")
    parser.add_argument("--composite-or", help="Boolean flag of whether the composition is OR. Otherwise its assumed as AND.", dest="composite_or", action="store_true")
    parser.add_argument("-C", dest="training_confs", help="Directories containing training conf", nargs="+")

    args = parser.parse_args()

    main(args.frame_utils, args.outdir, args.composite_or, args.training_confs)
